@book{friedl_mastering_2006,
	address = {1005 Gravenstein Highway North, Sebastopol, CA 95472},
	edition = {3},
	title = {Mastering {Regular} {Expressions}},
	publisher = {O'Reilly},
	author = {Friedl, Jeffrey E. F.},
	year = {2006}
}

@book{de_la_higuera_grammatical_2010,
	address = {New York, NY, USA},
	edition = {1},
	title = {Grammatical {Inference}: {Learning} {Automata} and {Grammars}},
	publisher = {Cambridge University Press},
	author = {de la Higuera, Collin},
	year = {2010}
}

@article{angluin_learning_1987,
	title = {Learning regular sets from queries and counterexamples},
	volume = {75},
	number = {2},
	journal = {Information and Computation},
	author = {Angluin, Dana},
	year = {1987},
	pages = {87--106},
	file = {Angluin - 1987 - Learning regular sets from queries and counterexam.pdf:/home/steyn/Zotero/storage/Z5U8FD2L/Angluin - 1987 - Learning regular sets from queries and counterexam.pdf:application/pdf}
}
@inproceedings{bollig_angluin-style_2009,
	address = {San Francisco, CA, USA},
	series = {{IJCAI}'09},
	title = {Angluin-style {Learning} of {NFA}},
	abstract = {We introduce NL*, a learning algorithm for inferring non-deterministic finite-state automata using membership and equivalence queries. More specifically, residual finite-state automata (RFSA) are learned similarly as in Angluin's popular L* algorithm, which, however, learns deterministic finite-state automata (DFA). Like in a DFA, the states of an RFSA represent residual languages. Unlike a DFA, an RFSA restricts to prime residual languages, which cannot be described as the union of other residual languages. In doing so, RFSA can be exponentially more succinct than DFA. They are, therefore, the preferable choice for many learning applications. The implementation of our algorithm is applied to a collection of examples and confirms the expected advantage of NL* over L*.},
	booktitle = {Proceedings of the 21st {International} {Jont} {Conference} on {Artifical} {Intelligence}},
	publisher = {Morgan Kaufmann Publishers Inc.},
	author = {Bollig, Benedikt and Habermehl, Peter and Kern, Carsten and Leucker, Martin},
	year = {2009},
	pages = {1004--1009}
}

@article{oliveira_efficient_2001,
	title = {Efficient {Algorithms} for the {Inference} of {Minimum} {Size} {DFAs}},
	volume = {44},
	abstract = {This work describes algorithms for the inference of minimum size deterministic automata consistent with a labeled training set. The algorithms presented represent the state of the art for this problem, known to be computationally very hard.In particular, we analyze the performance of algorithms that use implicit enumeration of solutions and algorithms that perform explicit search but incorporate a set of techniques known as dependency directed backtracking to prune the search tree effectively.We present empirical results that show the comparative efficiency of the methods studied and discuss alternative approaches to this problem, evaluating their advantages and drawbacks.},
	number = {1},
	journal = {Machine Learning},
	author = {Oliveira, Arlindo L. and Silva, Jo√£o P.M.},
	year = {2001},
	keywords = {deterministic finite automata, implicit enumeration, search methods},
	pages = {93--119},
	file = {Springer Full Text PDF:/home/steyn/Zotero/storage/RDXNTJ43/Oliveira and Silva - 2001 - Efficient Algorithms for the Inference of Minimum .pdf:application/pdf}
}

@misc{noauthor_list_nodate,
	title = {A list of the available implementations of grammar learning algorithms.},
	url = {https://grammarlearning.org/implementations},
	file = {Implementations | grammarlearning.org:/home/steyn/Zotero/storage/5Y8MECV4/implementations.html:text/html}
}

@misc{noauthor_program_nodate,
	title = {CLOC: A program for counting lines of source code in many programming languages.},
	url = {https://github.com/AlDanial/cloc}
}
